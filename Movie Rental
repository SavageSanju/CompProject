#include<iostream>
#include<fstream>
#include<string>



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//customer functions



//create a master array with all customer names, the movies they bowrrowed, date borrowed
//the return function the system date and the date on which movie was borrowed and calculates fees    
class Movie
{
    char MovieName[30];
    int NoOfMovie;
}
class Rental
{
    char MovieName[30];
    int DateBorrowed;
    int DateReturned;   
}
class Customer
{
    Rental rental[1];
    int Ccode;
    char Name[30];
}   
void customermenu()
{
    int c;
    char choice='y';
    do
    {
        cout<<"OPTIONS:"<<endl;
        cout<<"1.Rent a movie"<<endl;
        cout<<"2.Return a movie"<<endl;
        cout<<"3.View history"<<endl;
        cin>>c;
        switch(c)
        {
            case 1: rentmovie();
                    break;
            case 2: returnmovie();
                    break;
            case 3: viewhistory();
                    break;
            default:cout<<"Wrong input! Please input numbers 1, 2 or 3 only."<<endl;
                    break;
        }
    cout<<"Do you want to continue? y or n"<<endl;
    cin>>choice;
    }
    while(choice=='y'||choice=='Y');
}

/*void library()
{
    ofstream f;
    f.open("movies.txt",ios::out);
    f<<"PiratesOfTheCarribean Titanic Inception StarWars StarTrek Jaws TheMatrix ET TheSoundOfMusic Baby'sDayOut HomeAlone TheGodfather\n";
    f<<"Tangled Frozen TheLionKing TheJungleBook Cars TheIncredibles Up TheLittleMermaid Cinderella BeautyAndTheBeast PrincessAndTheFrog SnowWhite Moana Rio Alladin ToyStory\n";
    f<<"MeanGirls Jumanji Avengers SpiderMan Batman CaptainAmerica AliceInWonderland Gladiator ForrestGump TheLordOfTheRings PrettyWoman TheDevilWearsPrada PitchPerfect\n"
    f.close();
}*/

void rentmovie()
{

    int code[10]={1,2,3,4,5,6,7,8,9,10};
     int noc=0;
    char ch[5],cn;
    cout<<"want to continue";
    cin>>cn;
      f.open("database.dat",ios::out|ios::binary);
    while(cn=='y')
    {
    Customer c;
cout<<"are you a new customer";
    cin>>ch;
    if(strcmp(ch,"yes")==0)
    {noc=noc+1;
     c.Ccode=code[noc-1];

    }
    else
      {
           cout<<"enter your code";
           cin>>c.Ccode;

      }
    cout<<"enter the movie you want to borrow";
    cin>>c.rental[0].MovieName;
    int flag=0;
    movielibrary m;
    nf.open("library.dat",ios::in|ios::binary);
    while(nf.read((char*)&m,sizeof(m)))
    {
        if (strcmp(m.movie,c.rental[0].MovieName)==0)
            flag=1;
    }
    if (flag==1)


{
         c.rental[0].DateBorrowed=123;

    f.write((char*)&c,sizeof(c));
    //cout<<c.Ccode<<"  "<<c.rental[0].MovieName<<endl;
    }
    else
        cout<<"not available at the moment";

     cout<<"want to continue";
    cin>>cn;
    

   

    }

f.close();
Customer c;
f.open("database.dat",ios::in|ios::binary);
cout<<" code  movie name  date borrowed"<<endl;
while(f.read((char*)&c,sizeof(c)))
 cout<<c.Ccode<<"  "<<c.rental[0].MovieName<<endl;

}

void returnmovie()
{
    Customer s;
    fstream f;
    int t, flag=0;
    f.open("Database.dat,ios::in|ios::binary);
    cout<<"\n Enter customer code";
    cin>>t;
    while(f.read((char*)&s,sizeof(s)))
    {
        if(s.Ccode==t)
        {
            int l= 
            flag=1;
            break;
        }
    }
    if(!flag)
        cout<<"Not a valid customer code";
    f.close;
}




///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//manager functions



class movielibrary
{
   public:   
       char movie[50];
       void addmovie();
       void writemovie();
       void getmovie();
       void deletemovie();
       void displaymovie();
       void readmovie();
       void managermenu();

};

fstream f;
movielibrary s;

void movielibrary::writemovie()
{
    int nom;
    cout<<"Input the number of movies"<<endl;
    cin>>nom;
    f.open("library.dat",ios::out|ios::binary);
    for (int i=0;i<nom;i++)
    {
        s.getmovie();
        f.write((char*)&s,sizeof(s));

    }
    f.close();
}

void movielibrary::getmovie()
{
    cout<<"Enter the movie: "<<endl;
    fflush(stdin);
    gets(movie);
}

void movielibrary:: displaymovie()
{

    cout<<movie<<"  ";
}

void movielibrary:: readmovie()
{
    f.open("library.dat",ios::in|ios::binary);
    while(f.read((char*)&s,sizeof(s)))
        displaymovie();
    f.close();
}

void movielibrary:: addmovie()
{
    int n,i;
    movielibrary m;
    f.open("library.dat",ios::binary|ios::app|ios::binary);
    cout<<"How many movies do you want to add?"<<endl;
    cin>>n;
    for(i=0;i<n;i++)
    {
        m.getmovie();
        f.write((char*)&m,sizeof(m));
    }
    f.close();
}

void movielibrary:: deletemovie()
{
    int flag=0;
    char delmovie[50];
    cout<<"Enter the name of the movie to be deleted"<<endl;
    fflush(stdin);
    gets(delmovie);
    f.open("library.dat",ios::in|ios::binary);
    fstream nf;
    nf.open("newlibrary.dat",ios::out|ios::binary);
    while(f.read((char*)&s,sizeof(s)))
    {
        if (strcmpi(s.movie,delmovie)!=0)
            nf.write((char*)&s,sizeof(s));
        else
            flag++;
    }
    f.close();
    nf.close();
    remove("library.dat");
    rename ("newlibrary.dat","library.dat");
    if(!flag)
        cout<<"Not found! Try another movie."<<endl;
}


void movielibrary:: managermenu()
{
    int c;
    char choice='y';
    do
    {
        cout<<"OPTIONS:"<<endl;
        cout<<"1. Add movies to the library"<<endl;
        cout<<"2. Delete movies from the library"<<endl;
        cout<<"3. View the borrowed movies with details"<<endl;
        cout<<"4. Write into binary file"<<endl;
        cout<<"5. Read from binary file"<<endl;
        cin>>c;
        switch(c)
        {
            case 1: addmovie();
                    break;
            case 2: deletemovie();
                    break;
            case 3: current();
                    break;
            case 4: writemovie();
                    break;
            case 5: readmovie();
                    break;
            default:cout<<"Wrong input! Please input numbers 1, 2 or 3 only."<<endl;
                    break;
        }
    cout<<"Do you want to continue? y or n"<<endl;
    cin>>choice;
    }
    while(choice=='y'||choice=='Y'); 
  }
  
  
  
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//main initial menu



int main()
{
    //initial menu
    char user[30];
    cout<<"Welcome to ________ Movie Rentals"<<endl;
    cout<<"Are you a customer or a manager?"<<endl;
    gets(user);
    if(strcmpi(user,"Customer")==0)
    {
        customermenu();
    }
    else if(strcmpi(user,"Manager")==0)
    {
        int passw;
        cout<<"Enter the password"<<endl;
        cin>>passw;
        if (passw==2806)
        {
            s.managermenu();
        }
    }
    
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//#include <time.h>
//using namespace std;
//int main()
//{
//time_t theTime = time(NULL);
//struct tm *aTime = localtime(&theTime);

//int d1 = aTime->tm_mday;
//int m1 = aTime->tm_mon + 1; // Month is 0 - 11, add 1 to get a jan-dec 1-12 concept
//int y1 = aTime->tm_year + 1900;
//m1=(m1+9)%12;
//y1=y1-m1/10;
//int t1= 365*y1+y1/4-y1/100+y1/400+(m1*306+5)/10+(d1-1);
//int d2=28;
//int m2=12;
//m2=(m2+9)%12;
//int y2=2018;
//y2=y2-m2/10;
//int t2=365*y2+y2/4-y2/100+y2/400+(m2*306+5)/10+(d2-1);
//cout<<(t2-t1);
}
