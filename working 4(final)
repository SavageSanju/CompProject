#include<iostream>
#include<fstream>
#include<string.h>
#include<time.h>
#include<iomanip>

using namespace std;

fstream nf;
fstream f;

//manager class

class movielibrary
{
public:
    char movie[50];
    int code;
    void addmovie();
    void getmovie();
    void deletemovie();
    void displaymovie();
    void managermenu();
    void borrowed();
    void overdue();
    void all();
    void sortmovie();
};

movielibrary s;

//manager functions

void movielibrary::getmovie()
{
    cout<<"Enter the movie: "<<endl;
    fflush(stdin);
    gets(movie);
    code=0;
}

void movielibrary:: displaymovie()
{

    cout<<movie<<"  "<<code<<endl;
}

void movielibrary:: addmovie()
{
    int n,i;
    movielibrary m;
    f.open("library.dat",ios::binary|ios::app|ios::binary|ios::out);
    cout<<"How many movies do you want to add?"<<endl;
    cin>>n;
    for(i=0;i<n;i++)
    {
        m.getmovie();
        f.write((char*)&m,sizeof(m));
    }
    f.close();
}

void movielibrary:: deletemovie()
{
    int flag=0;
    char delmovie[50];
    cout<<"Enter the name of the movie to be deleted"<<endl;
    fflush(stdin);
    gets(delmovie);
    f.open("library.dat",ios::in|ios::binary);
    fstream nf;
    nf.open("newlibrary.dat",ios::out|ios::binary);
    while(f.read((char*)&s,sizeof(s)))
    {
        if (strcmpi(s.movie,delmovie)!=0)
            nf.write((char*)&s,sizeof(s));
        else
            flag++;
    }
    f.close();
    nf.close();
    remove("library.dat");
    rename ("newlibrary.dat","library.dat");
    if(!flag)
        cout<<"Not found! Try another movie."<<endl;
}

void movielibrary:: all()
{ sortmovie();
    f.open("library.dat", ios::in|ios::binary);
    cout<<setw(25)<<setiosflags(ios::left)<<"Movie Name"<<setw(30)<<setiosflags(ios::left)<<"Code"<<endl;
    while(f.read((char*)&s,sizeof(s)))
    {
            cout<<setw(25)<<setiosflags(ios::left)<<movie<<setw(30)<<setiosflags(ios::left)<<code<<endl;
    }
    f.close();
}

void movielibrary::sortmovie()
{
    f.open("library.dat",ios::in|ios::out|ios::binary);
    fstream nf;
    nf.open("newlibrary.dat",ios::out|ios::binary);
    int i=0,j,c=0;

    movielibrary m[50];
    f.seekg(0,ios::beg);
    while (f.read((char*)&m[c],sizeof(m[c])))
        c++;
    for(i=0;i<(c-1);i++)
    {
        for(j=i+1;j<c;j++)
        {
            if(strcmp(m[i].movie,m[j].movie)>0)
            {
                char v[50];
                strcpy(v,m[i].movie);
                strcpy(m[i].movie,m[j].movie);
                strcpy(m[j].movie,v);

            }

        }

    }
    for(i=0;i<c;i++)
    {
        nf.write((char*)&m[i],sizeof(m[i]));
    }
     f.close();
    nf.close();
    remove("library.dat");
    rename("newlibrary.dat","library.dat");
}

void movielibrary:: managermenu() //manager main menu
{
    int c;
    char choice[5]="yes";
    do
    {
        cout<<"OPTIONS:"<<endl;
        cout<<"1. Add movies to the library"<<endl;
        cout<<"2. Delete movies from the library"<<endl;
        cout<<"3. View all the movies with details"<<endl;
        cout<<"4. View the borrowed movies with details"<<endl;
        cout<<"5. View the overdue movies with details"<<endl;
        cin>>c;
        cout<<endl;
        switch(c)
        {
            case 1: addmovie();
                break;
            case 2: deletemovie();
                break;
            case 3: all();
                break;
            case 4: borrowed();
                break;
            case 5: overdue();
                break;
            default:cout<<"Wrong input! Please input numbers 1, 2 or 3 only."<<endl;
                break;
        }
        cout<<endl;
        cout<<"Do you want to continue? yes/no"<<endl;
        cin>>choice;
        cout<<endl;
    }
    while (strcmpi(choice,"yes")==0);
}

//customer classes

class Rental
{
    public:
        char MovieName[30];
        time_t DateBorrowed;
        time_t DateReturned;
};

class Customer
{
public:
    Rental rental;
    int Ccode;
    char Name[30];
    void rentmovie();
    void returnmovie();
    void viewhistory();
    void customermenu();
    void writeCountToFile(int num);
    int readCountFromFile();
    void currentRentals();
    void searchmovie();
    void availablemovie();
};

Customer c;

void Customer::writeCountToFile(int num)
{
    ofstream outfile;
    outfile.open("customerCount.bin", ios::binary|ios::out);
    outfile.write (reinterpret_cast<const char *>(&num), sizeof(num));
    outfile.close ();
}

int Customer::readCountFromFile(){
    int rv;
    ifstream infile ("customerCount.bin", ios::binary | ios::in);
    if(infile){
        infile.read(reinterpret_cast<char *>(&rv), sizeof(rv));
        infile.close ();
    } else {
        rv = 0;
    }
    return rv;
}

void Customer::customermenu()  //customer main menu
{
    int c;
    char choice[5]="yes";
    do
    {
        cout<<"OPTIONS:"<<endl;
        cout<<"1.Rent a movie"<<endl;
        cout<<"2.Return a movie"<<endl;
        cout<<"3.View history"<<endl;
        cout<<"4.View current rentals"<<endl;
        cout<<"5.Search for a movie"<<endl;
        cout<<"6.Available movies"<<endl;
        cin>>c;
        cout<<endl;
        switch(c)
        {
            case 1: rentmovie();
                    break;
            case 2: returnmovie();
                    break;
            case 3: viewhistory();
                    break;
            case 4: currentRentals();
                    break;
            case 5:searchmovie();
                    break;
            case 6:availablemovie();
                   break;
            default:cout<<"Wrong input! Please input numbers 1, 2 or 3 only."<<endl;
                    break;
        }
        cout<<endl;
        cout<<"Do you want to continue? yes/no"<<endl;
        cin>>choice;
        cout<<endl;
    }
    while (strcmpi(choice,"yes")==0);
}

//customer functions

void Customer:: rentmovie()
{
    int noc=readCountFromFile();
    char ch[5];
    f.open("database.dat",ios::out|ios::binary|ios::app);
    cout<<"Are you a new customer? yes/no  ";
    cin>>ch;
    cout<<endl;
    if(strcmp(ch,"yes")==0)
    {
        noc=noc+1;
        c.Ccode=noc;
        cout<<"Your customer code is: "<<Ccode<<endl;
    }
    else
    {
        cout<<"Enter your code: ";
        cin>>c.Ccode;
    }
    cout<<"Enter the movie you want to borrow: ";
    fflush(stdin);
    gets(c.rental.MovieName);
    cout<<endl;
    int flag=0;
    movielibrary m;
    fstream nf;
    nf.open("library.dat",ios::in|ios::out|ios::binary);
    while (nf.read((char*)&m,sizeof(m)))
    {
        if (strcmpi(c.rental.MovieName,m.movie)==0)
      {
          if (m.code==0)
          {
            m.code=Ccode;
            nf.seekp(nf.tellg()-sizeof(m));
            nf.write((char*)&m,sizeof(m));
            flag=1;
            writeCountToFile(noc);
           }
      }
    }
    nf.close();
    if (flag==1)
    {
        time_t now = time(0);
        c.rental.DateBorrowed=now;
        f.write((char*)&c,sizeof(c));
    }
    else
        cout<<"Not available at the moment."<<endl;
    f.close();
}

void Customer:: returnmovie()
{
    Customer s;
    fstream f;
    int amt,t, flag=0;
    char n[30];
    f.open("Database.dat",ios::in|ios::binary);
    cout<<"Enter customer code: ";
    cin>>t;
    cout<<"Enter Movie name: ";
    fflush(stdin);
    gets(n);
    movielibrary m;
    while(f.read((char*)&s,sizeof(s)))
    {
        if(s.Ccode==t && strcmp(s.rental.MovieName,n)==0)
        {
            time_t now = time(0);
            if((difftime(now,s.rental.DateBorrowed)/ (60 * 60 * 24))>7)
                amt=50+10*((difftime(now,s.rental.DateBorrowed)/ (60 * 60 * 24))-7);
            else
                amt=50;
            cout<<"Please pay Rs."<<amt<<" to the manager."<<endl;
            s.rental.DateReturned=now;
            flag=1;
            break;
        }
    }
    if (flag==1)
    {
        nf.open("library.dat",ios::in|ios::out|ios::binary);
       while (nf.read((char*)&m,sizeof(m)))
        if(strcmpi(n,m.movie)==0)
         {  nf.seekp(nf.tellg()-sizeof(m));
             m.code=0;
             nf.write((char*)&m,sizeof(m));
         }
    }
    nf.close();
    if(!flag)
    {
        cout<<endl;
        cout<<"Not a valid customer code."<<endl;
    }
    f.close();
}

void Customer:: viewhistory()
{
    Customer c;
    f.open("database.dat",ios::in|ios::binary);
    cout<<"Enter customer code to view history: ";
    int ncode;
    cin>>ncode;
    cout<<setw(15)<<setiosflags(ios::left)<<"Code"<<setw(15)<<setiosflags(ios::left)<<"Movie Name"<<setw(25)<<setiosflags(ios::left)<<"Date Borrowed"<<setw(70)<<setiosflags(ios::left)<<"Date Returned"<<endl;
    while(f.read((char*)&c,sizeof(c)))
    {
        if (c.Ccode==ncode&&c.rental.DateReturned!=NULL)
            cout<<setw(15)<<setiosflags(ios::left)<<c.Ccode<<setw(15)<<setiosflags(ios::left)<<c.rental.MovieName<<setw(25)<<setiosflags(ios::left)<<ctime(&c.rental.DateBorrowed)<<setw(70)<<setiosflags(ios::left)<<ctime(&c.rental.DateReturned)<<endl;
        if (c.Ccode==ncode&&c.rental.DateReturned==NULL)
            cout<<setw(15)<<setiosflags(ios::left)<<c.Ccode<<setw(15)<<setiosflags(ios::left)<<c.rental.MovieName<<setw(25)<<setiosflags(ios::left)<<ctime(&c.rental.DateBorrowed)<<setw(70)<<setiosflags(ios::left)<<"Not Returned"<<endl;
    }
    f.close();
}

void movielibrary:: borrowed()
{
      movielibrary m;
     m.sortmovie();
    f.open("library.dat", ios::in|ios::binary);
    while(f.read((char*)&m,sizeof(m)))
    {
        if(m.code!=0)
            cout<<m.movie<<" "<<m.code<<endl;
    }
    f.close();
}

void Customer:: currentRentals()
{
    movielibrary m;
     m.sortmovie();
     cout<<"Enter your code to view current rentals: ";
     int ncode;
     cin>>ncode;
    f.open("library.dat", ios::in|ios::binary);
    while(f.read((char*)&m,sizeof(m)))
    {
        if(m.code==ncode)
            cout<<m.movie<<endl;
    }
    f.close();
}

void movielibrary:: overdue()
{
    time_t now = time(0);
    Customer p;
    int flag=0;
    f.open("database.dat", ios::in|ios::binary);
    while(f.read((char*)&p,sizeof(p)))
    {
        if((difftime(now,p.rental.DateBorrowed)/ (60 * 60 * 24))>7)
            cout<<p.rental.MovieName<<"  "<<p.Ccode<<endl;
        else
            flag=1;
        if(flag!=0)
            cout<<"No overdue movies."<<endl;
    }
    f.close();
}

void Customer::searchmovie()
{
    movielibrary m;
    fstream nf;
    int flag=0;
    cout<<"Enter the movie name: ";
    fflush(stdin);
    gets(c.rental.MovieName);
    nf.open("library.dat",ios::in|ios::out|ios::binary);
    while (nf.read((char*)&m,sizeof(m)))
    {
        if (strcmpi(c.rental.MovieName,m.movie)==0)
        {
            flag++;
            if (m.code==0)
                cout<<"The movie is currently available."<<endl;
            else if (m.code==1)
                cout<<"Not available at the moment."<<endl;
        }
    }
    if (flag==0)
        cout<<"Movie not in the library."<<endl;
    f.close();
    nf.close();

}


void Customer:: availablemovie()
{
    movielibrary m;
     m.sortmovie();
    f.open("library.dat", ios::in|ios::binary);
    while(f.read((char*)&m,sizeof(m)))
    {
        if(m.code==0)
            cout<<m.movie<<endl;
    }
    f.close();
}

void choicemenu()
{
    char user[30];
    cout<<"Are you a customer or a manager?"<<endl;
    fflush(stdin);
    gets(user);
    cout<<endl;
    if(strcmpi(user,"Customer")==0)
    {
       c.customermenu();
    }
    else if(strcmpi(user,"Manager")==0)
    {
        int passw;
        cout<<"Enter the password: ";
        cin>>passw;
        cout<<endl;
        if (passw==2806)
        {
            s.managermenu();
        }
    }
}

int main()
{
    cout<<"Welcome to ABC Movie Rentals"<<endl;
    cout<<"Every movie can be borrowed for a maximum of 1 week from the date of issue."<<endl;
    cout<<"Rate: Rs.50 for 1 week."<<endl;
    cout<<"Late fee: Rs.10 for every extra day"<<endl;
    cout<<endl;
    char choice[5]="yes";
    do
    {
        choicemenu();
        cout<<"Do you want to change users?"<<endl;
        fflush(stdin);
        gets(choice);
    }
    while (strcmpi(choice,"yes")==0);
}
